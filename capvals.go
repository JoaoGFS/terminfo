package terminfo

// Code generated by gen.go. DO NOT EDIT.

const (
	// AutoLeftMargin [auto_left_margin, bw] indicates cub1 wraps from column 0 to last column.
	AutoLeftMargin = iota

	// AutoRightMargin [auto_right_margin, am] indicates terminal has automatic margins.
	AutoRightMargin

	// NoEscCtlc [no_esc_ctlc, xsb] indicates beehive (f1=escape, f2=ctrl C).
	NoEscCtlc

	// CeolStandoutGlitch [ceol_standout_glitch, xhp] indicates standout not erased by overwriting (hp).
	CeolStandoutGlitch

	// EatNewlineGlitch [eat_newline_glitch, xenl] indicates newline ignored after 80 cols (concept).
	EatNewlineGlitch

	// EraseOverstrike [erase_overstrike, eo] indicates can erase overstrikes with a blank.
	EraseOverstrike

	// GenericType [generic_type, gn] indicates generic line type.
	GenericType

	// HardCopy [hard_copy, hc] indicates hardcopy terminal.
	HardCopy

	// HasMetaKey [has_meta_key, km] indicates Has a meta key (i.e., sets 8th-bit).
	HasMetaKey

	// HasStatusLine [has_status_line, hs] indicates has extra status line.
	HasStatusLine

	// InsertNullGlitch [insert_null_glitch, in] indicates insert mode distinguishes nulls.
	InsertNullGlitch

	// MemoryAbove [memory_above, da] indicates display may be retained above the screen.
	MemoryAbove

	// MemoryBelow [memory_below, db] indicates display may be retained below the screen.
	MemoryBelow

	// MoveInsertMode [move_insert_mode, mir] indicates safe to move while in insert mode.
	MoveInsertMode

	// MoveStandoutMode [move_standout_mode, msgr] indicates safe to move while in standout mode.
	MoveStandoutMode

	// OverStrike [over_strike, os] indicates terminal can overstrike.
	OverStrike

	// StatusLineEscOk [status_line_esc_ok, eslok] indicates escape can be used on the status line.
	StatusLineEscOk

	// DestTabsMagicSmso [dest_tabs_magic_smso, xt] indicates tabs destructive, magic so char (t1061).
	DestTabsMagicSmso

	// TildeGlitch [tilde_glitch, hz] indicates cannot print ~'s (Hazeltine).
	TildeGlitch

	// TransparentUnderline [transparent_underline, ul] indicates underline character overstrikes.
	TransparentUnderline

	// XonXoff [xon_xoff, xon] indicates terminal uses xon/xoff handshaking.
	XonXoff

	// NeedsXonXoff [needs_xon_xoff, nxon] indicates padding will not work, xon/xoff required.
	NeedsXonXoff

	// PrtrSilent [prtr_silent, mc5i] indicates printer will not echo on screen.
	PrtrSilent

	// HardCursor [hard_cursor, chts] indicates cursor is hard to see.
	HardCursor

	// NonRevRmcup [non_rev_rmcup, nrrmc] indicates smcup does not reverse rmcup.
	NonRevRmcup

	// NoPadChar [no_pad_char, npc] indicates pad character does not exist.
	NoPadChar

	// NonDestScrollRegion [non_dest_scroll_region, ndscr] indicates scrolling region is non-destructive.
	NonDestScrollRegion

	// CanChange [can_change, ccc] indicates terminal can re-define existing colors.
	CanChange

	// BackColorErase [back_color_erase, bce] indicates screen erased with background color.
	BackColorErase

	// HueLightnessSaturation [hue_lightness_saturation, hls] indicates terminal uses only HLS color notation (Tektronix).
	HueLightnessSaturation

	// ColAddrGlitch [col_addr_glitch, xhpa] indicates only positive motion for hpa/mhpa caps.
	ColAddrGlitch

	// CrCancelsMicroMode [cr_cancels_micro_mode, crxm] indicates using cr turns off micro mode.
	CrCancelsMicroMode

	// HasPrintWheel [has_print_wheel, daisy] indicates printer needs operator to change character set.
	HasPrintWheel

	// RowAddrGlitch [row_addr_glitch, xvpa] indicates only positive motion for vpa/mvpa caps.
	RowAddrGlitch

	// SemiAutoRightMargin [semi_auto_right_margin, sam] indicates printing in last column causes cr.
	SemiAutoRightMargin

	// CpiChangesRes [cpi_changes_res, cpix] indicates changing character pitch changes resolution.
	CpiChangesRes

	// LpiChangesRes [lpi_changes_res, lpix] indicates changing line pitch changes resolution.
	LpiChangesRes

	// BackspacesWithBs [backspaces_with_bs, OTbs] indicates uses ^H to move left.
	BackspacesWithBs

	// CrtNoScrolling [crt_no_scrolling, OTns] indicates crt cannot scroll.
	CrtNoScrolling

	// NoCorrectlyWorkingCr [no_correctly_working_cr, OTnc] indicates no way to go to start of line.
	NoCorrectlyWorkingCr

	// GnuHasMetaKey [gnu_has_meta_key, OTMT] indicates has meta key.
	GnuHasMetaKey

	// LinefeedIsNewline [linefeed_is_newline, OTNL] indicates move down with \n.
	LinefeedIsNewline

	// HasHardwareTabs [has_hardware_tabs, OTpt] indicates has 8-char tabs invoked with ^I.
	HasHardwareTabs

	// ReturnDoesClrEol [return_does_clr_eol, OTxr] indicates return clears the line.
	ReturnDoesClrEol
)

const (
	// Columns [columns, cols] is number of columns in a line.
	Columns = iota

	// InitTabs [init_tabs, it] is tabs initially every # spaces.
	InitTabs

	// Lines [lines, lines] is number of lines on screen or page.
	Lines

	// LinesOfMemory [lines_of_memory, lm] is lines of memory if > line. 0 means varies.
	LinesOfMemory

	// MagicCookieGlitch [magic_cookie_glitch, xmc] is number of blank characters left by smso or rmso.
	MagicCookieGlitch

	// PaddingBaudRate [padding_baud_rate, pb] is lowest baud rate where padding needed.
	PaddingBaudRate

	// VirtualTerminal [virtual_terminal, vt] is virtual terminal number (CB/unix).
	VirtualTerminal

	// WidthStatusLine [width_status_line, wsl] is number of columns in status line.
	WidthStatusLine

	// NumLabels [num_labels, nlab] is number of labels on screen.
	NumLabels

	// LabelHeight [label_height, lh] is rows in each label.
	LabelHeight

	// LabelWidth [label_width, lw] is columns in each label.
	LabelWidth

	// MaxAttributes [max_attributes, ma] is maximum combined attributes terminal can handle.
	MaxAttributes

	// MaximumWindows [maximum_windows, wnum] is maximum number of definable windows.
	MaximumWindows

	// MaxColors [max_colors, colors] is maximum number of colors on screen.
	MaxColors

	// MaxPairs [max_pairs, pairs] is maximum number of color-pairs on the screen.
	MaxPairs

	// NoColorVideo [no_color_video, ncv] is video attributes that cannot be used with colors.
	NoColorVideo

	// BufferCapacity [buffer_capacity, bufsz] is numbers of bytes buffered before printing.
	BufferCapacity

	// DotVertSpacing [dot_vert_spacing, spinv] is spacing of pins vertically in pins per inch.
	DotVertSpacing

	// DotHorzSpacing [dot_horz_spacing, spinh] is spacing of dots horizontally in dots per inch.
	DotHorzSpacing

	// MaxMicroAddress [max_micro_address, maddr] is maximum value in micro_..._address.
	MaxMicroAddress

	// MaxMicroJump [max_micro_jump, mjump] is maximum value in parm_..._micro.
	MaxMicroJump

	// MicroColSize [micro_col_size, mcs] is character step size when in micro mode.
	MicroColSize

	// MicroLineSize [micro_line_size, mls] is line step size when in micro mode.
	MicroLineSize

	// NumberOfPins [number_of_pins, npins] is numbers of pins in print-head.
	NumberOfPins

	// OutputResChar [output_res_char, orc] is horizontal resolution in units per line.
	OutputResChar

	// OutputResLine [output_res_line, orl] is vertical resolution in units per line.
	OutputResLine

	// OutputResHorzInch [output_res_horz_inch, orhi] is horizontal resolution in units per inch.
	OutputResHorzInch

	// OutputResVertInch [output_res_vert_inch, orvi] is vertical resolution in units per inch.
	OutputResVertInch

	// PrintRate [print_rate, cps] is print rate in characters per second.
	PrintRate

	// WideCharSize [wide_char_size, widcs] is character step size when in double wide mode.
	WideCharSize

	// Buttons [buttons, btns] is number of buttons on mouse.
	Buttons

	// BitImageEntwining [bit_image_entwining, bitwin] is number of passes for each bit-image row.
	BitImageEntwining

	// BitImageType [bit_image_type, bitype] is type of bit-image device.
	BitImageType

	// MagicCookieGlitchUl [magic_cookie_glitch_ul, OTug] is number of blanks left by ul.
	MagicCookieGlitchUl

	// CarriageReturnDelay [carriage_return_delay, OTdC] is pad needed for CR.
	CarriageReturnDelay

	// NewLineDelay [new_line_delay, OTdN] is pad needed for LF.
	NewLineDelay

	// BackspaceDelay [backspace_delay, OTdB] is padding required for ^H.
	BackspaceDelay

	// HorizontalTabDelay [horizontal_tab_delay, OTdT] is padding required for ^I.
	HorizontalTabDelay

	// NumberOfFunctionKeys [number_of_function_keys, OTkn] is count of function keys.
	NumberOfFunctionKeys
)

const (
	// BackTab [back_tab, cbt] is the back tab (P).
	BackTab = iota

	// Bell [bell, bel] is the audible signal (bell) (P).
	Bell

	// CarriageReturn [carriage_return, cr] is the carriage return (P*) (P*).
	CarriageReturn

	// ChangeScrollRegion [change_scroll_region, csr] is the change region to line #1 to line #2 (P).
	ChangeScrollRegion

	// ClearAllTabs [clear_all_tabs, tbc] is the clear all tab stops (P).
	ClearAllTabs

	// ClearScreen [clear_screen, clear] is the clear screen and home cursor (P*).
	ClearScreen

	// ClrEol [clr_eol, el] is the clear to end of line (P).
	ClrEol

	// ClrEos [clr_eos, ed] is the clear to end of screen (P*).
	ClrEos

	// ColumnAddress [column_address, hpa] is the horizontal position #1, absolute (P).
	ColumnAddress

	// CommandCharacter [command_character, cmdch] is the terminal settable cmd character in prototype !?.
	CommandCharacter

	// CursorAddress [cursor_address, cup] is the move to row #1 columns #2.
	CursorAddress

	// CursorDown [cursor_down, cud1] is the down one line.
	CursorDown

	// CursorHome [cursor_home, home] is the home cursor (if no cup).
	CursorHome

	// CursorInvisible [cursor_invisible, civis] is the make cursor invisible.
	CursorInvisible

	// CursorLeft [cursor_left, cub1] is the move left one space.
	CursorLeft

	// CursorMemAddress [cursor_mem_address, mrcup] is the memory relative cursor addressing, move to row #1 columns #2.
	CursorMemAddress

	// CursorNormal [cursor_normal, cnorm] is the make cursor appear normal (undo civis/cvvis).
	CursorNormal

	// CursorRight [cursor_right, cuf1] is the non-destructive space (move right one space).
	CursorRight

	// CursorToLl [cursor_to_ll, ll] is the last line, first column (if no cup).
	CursorToLl

	// CursorUp [cursor_up, cuu1] is the up one line.
	CursorUp

	// CursorVisible [cursor_visible, cvvis] is the make cursor very visible.
	CursorVisible

	// DeleteCharacter [delete_character, dch1] is the delete character (P*).
	DeleteCharacter

	// DeleteLine [delete_line, dl1] is the delete line (P*).
	DeleteLine

	// DisStatusLine [dis_status_line, dsl] is the disable status line.
	DisStatusLine

	// DownHalfLine [down_half_line, hd] is the half a line down.
	DownHalfLine

	// EnterAltCharsetMode [enter_alt_charset_mode, smacs] is the start alternate character set (P).
	EnterAltCharsetMode

	// EnterBlinkMode [enter_blink_mode, blink] is the turn on blinking.
	EnterBlinkMode

	// EnterBoldMode [enter_bold_mode, bold] is the turn on bold (extra bright) mode.
	EnterBoldMode

	// EnterCaMode [enter_ca_mode, smcup] is the string to start programs using cup.
	EnterCaMode

	// EnterDeleteMode [enter_delete_mode, smdc] is the enter delete mode.
	EnterDeleteMode

	// EnterDimMode [enter_dim_mode, dim] is the turn on half-bright mode.
	EnterDimMode

	// EnterInsertMode [enter_insert_mode, smir] is the enter insert mode.
	EnterInsertMode

	// EnterSecureMode [enter_secure_mode, invis] is the turn on blank mode (characters invisible).
	EnterSecureMode

	// EnterProtectedMode [enter_protected_mode, prot] is the turn on protected mode.
	EnterProtectedMode

	// EnterReverseMode [enter_reverse_mode, rev] is the turn on reverse video mode.
	EnterReverseMode

	// EnterStandoutMode [enter_standout_mode, smso] is the begin standout mode.
	EnterStandoutMode

	// EnterUnderlineMode [enter_underline_mode, smul] is the begin underline mode.
	EnterUnderlineMode

	// EraseChars [erase_chars, ech] is the erase #1 characters (P).
	EraseChars

	// ExitAltCharsetMode [exit_alt_charset_mode, rmacs] is the end alternate character set (P).
	ExitAltCharsetMode

	// ExitAttributeMode [exit_attribute_mode, sgr0] is the turn off all attributes.
	ExitAttributeMode

	// ExitCaMode [exit_ca_mode, rmcup] is the strings to end programs using cup.
	ExitCaMode

	// ExitDeleteMode [exit_delete_mode, rmdc] is the end delete mode.
	ExitDeleteMode

	// ExitInsertMode [exit_insert_mode, rmir] is the exit insert mode.
	ExitInsertMode

	// ExitStandoutMode [exit_standout_mode, rmso] is the exit standout mode.
	ExitStandoutMode

	// ExitUnderlineMode [exit_underline_mode, rmul] is the exit underline mode.
	ExitUnderlineMode

	// FlashScreen [flash_screen, flash] is the visible bell (may not move cursor).
	FlashScreen

	// FormFeed [form_feed, ff] is the hardcopy terminal page eject (P*).
	FormFeed

	// FromStatusLine [from_status_line, fsl] is the return from status line.
	FromStatusLine

	// Init1string [init_1string, is1] is the initialization string.
	Init1string

	// Init2string [init_2string, is2] is the initialization string.
	Init2string

	// Init3string [init_3string, is3] is the initialization string.
	Init3string

	// InitFile [init_file, if] is the name of initialization file.
	InitFile

	// InsertCharacter [insert_character, ich1] is the insert character (P).
	InsertCharacter

	// InsertLine [insert_line, il1] is the insert line (P*).
	InsertLine

	// InsertPadding [insert_padding, ip] is the insert padding after inserted character.
	InsertPadding

	// KeyBackspace [key_backspace, kbs] is the backspace key.
	KeyBackspace

	// KeyCatab [key_catab, ktbc] is the clear-all-tabs key.
	KeyCatab

	// KeyClear [key_clear, kclr] is the clear-screen or erase key.
	KeyClear

	// KeyCtab [key_ctab, kctab] is the clear-tab key.
	KeyCtab

	// KeyDc [key_dc, kdch1] is the delete-character key.
	KeyDc

	// KeyDl [key_dl, kdl1] is the delete-line key.
	KeyDl

	// KeyDown [key_down, kcud1] is the down-arrow key.
	KeyDown

	// KeyEic [key_eic, krmir] is the sent by rmir or smir in insert mode.
	KeyEic

	// KeyEol [key_eol, kel] is the clear-to-end-of-line key.
	KeyEol

	// KeyEos [key_eos, ked] is the clear-to-end-of-screen key.
	KeyEos

	// KeyF0 [key_f0, kf0] is the F0 function key.
	KeyF0

	// KeyF1 [key_f1, kf1] is the F1 function key.
	KeyF1

	// KeyF10 [key_f10, kf10] is the F10 function key.
	KeyF10

	// KeyF2 [key_f2, kf2] is the F2 function key.
	KeyF2

	// KeyF3 [key_f3, kf3] is the F3 function key.
	KeyF3

	// KeyF4 [key_f4, kf4] is the F4 function key.
	KeyF4

	// KeyF5 [key_f5, kf5] is the F5 function key.
	KeyF5

	// KeyF6 [key_f6, kf6] is the F6 function key.
	KeyF6

	// KeyF7 [key_f7, kf7] is the F7 function key.
	KeyF7

	// KeyF8 [key_f8, kf8] is the F8 function key.
	KeyF8

	// KeyF9 [key_f9, kf9] is the F9 function key.
	KeyF9

	// KeyHome [key_home, khome] is the home key.
	KeyHome

	// KeyIc [key_ic, kich1] is the insert-character key.
	KeyIc

	// KeyIl [key_il, kil1] is the insert-line key.
	KeyIl

	// KeyLeft [key_left, kcub1] is the left-arrow key.
	KeyLeft

	// KeyLl [key_ll, kll] is the lower-left key (home down).
	KeyLl

	// KeyNpage [key_npage, knp] is the next-page key.
	KeyNpage

	// KeyPpage [key_ppage, kpp] is the previous-page key.
	KeyPpage

	// KeyRight [key_right, kcuf1] is the right-arrow key.
	KeyRight

	// KeySf [key_sf, kind] is the scroll-forward key.
	KeySf

	// KeySr [key_sr, kri] is the scroll-backward key.
	KeySr

	// KeyStab [key_stab, khts] is the set-tab key.
	KeyStab

	// KeyUp [key_up, kcuu1] is the up-arrow key.
	KeyUp

	// KeypadLocal [keypad_local, rmkx] is the leave 'keyboard_transmit' mode.
	KeypadLocal

	// KeypadXmit [keypad_xmit, smkx] is the enter 'keyboard_transmit' mode.
	KeypadXmit

	// LabF0 [lab_f0, lf0] is the label on function key f0 if not f0.
	LabF0

	// LabF1 [lab_f1, lf1] is the label on function key f1 if not f1.
	LabF1

	// LabF10 [lab_f10, lf10] is the label on function key f10 if not f10.
	LabF10

	// LabF2 [lab_f2, lf2] is the label on function key f2 if not f2.
	LabF2

	// LabF3 [lab_f3, lf3] is the label on function key f3 if not f3.
	LabF3

	// LabF4 [lab_f4, lf4] is the label on function key f4 if not f4.
	LabF4

	// LabF5 [lab_f5, lf5] is the label on function key f5 if not f5.
	LabF5

	// LabF6 [lab_f6, lf6] is the label on function key f6 if not f6.
	LabF6

	// LabF7 [lab_f7, lf7] is the label on function key f7 if not f7.
	LabF7

	// LabF8 [lab_f8, lf8] is the label on function key f8 if not f8.
	LabF8

	// LabF9 [lab_f9, lf9] is the label on function key f9 if not f9.
	LabF9

	// MetaOff [meta_off, rmm] is the turn off meta mode.
	MetaOff

	// MetaOn [meta_on, smm] is the turn on meta mode (8th-bit on).
	MetaOn

	// Newline [newline, nel] is the newline (behave like cr followed by lf).
	Newline

	// PadChar [pad_char, pad] is the padding char (instead of null).
	PadChar

	// ParmDch [parm_dch, dch] is the delete #1 characters (P*).
	ParmDch

	// ParmDeleteLine [parm_delete_line, dl] is the delete #1 lines (P*).
	ParmDeleteLine

	// ParmDownCursor [parm_down_cursor, cud] is the down #1 lines (P*).
	ParmDownCursor

	// ParmIch [parm_ich, ich] is the insert #1 characters (P*).
	ParmIch

	// ParmIndex [parm_index, indn] is the scroll forward #1 lines (P).
	ParmIndex

	// ParmInsertLine [parm_insert_line, il] is the insert #1 lines (P*).
	ParmInsertLine

	// ParmLeftCursor [parm_left_cursor, cub] is the move #1 characters to the left (P).
	ParmLeftCursor

	// ParmRightCursor [parm_right_cursor, cuf] is the move #1 characters to the right (P*).
	ParmRightCursor

	// ParmRindex [parm_rindex, rin] is the scroll back #1 lines (P).
	ParmRindex

	// ParmUpCursor [parm_up_cursor, cuu] is the up #1 lines (P*).
	ParmUpCursor

	// PkeyKey [pkey_key, pfkey] is the program function key #1 to type string #2.
	PkeyKey

	// PkeyLocal [pkey_local, pfloc] is the program function key #1 to execute string #2.
	PkeyLocal

	// PkeyXmit [pkey_xmit, pfx] is the program function key #1 to transmit string #2.
	PkeyXmit

	// PrintScreen [print_screen, mc0] is the print contents of screen.
	PrintScreen

	// PrtrOff [prtr_off, mc4] is the turn off printer.
	PrtrOff

	// PrtrOn [prtr_on, mc5] is the turn on printer.
	PrtrOn

	// RepeatChar [repeat_char, rep] is the repeat char #1 #2 times (P*).
	RepeatChar

	// Reset1string [reset_1string, rs1] is the reset string.
	Reset1string

	// Reset2string [reset_2string, rs2] is the reset string.
	Reset2string

	// Reset3string [reset_3string, rs3] is the reset string.
	Reset3string

	// ResetFile [reset_file, rf] is the name of reset file.
	ResetFile

	// RestoreCursor [restore_cursor, rc] is the restore cursor to position of last save_cursor.
	RestoreCursor

	// RowAddress [row_address, vpa] is the vertical position #1 absolute (P).
	RowAddress

	// SaveCursor [save_cursor, sc] is the save current cursor position (P).
	SaveCursor

	// ScrollForward [scroll_forward, ind] is the scroll text up (P).
	ScrollForward

	// ScrollReverse [scroll_reverse, ri] is the scroll text down (P).
	ScrollReverse

	// SetAttributes [set_attributes, sgr] is the define video attributes #1-#9 (PG9).
	SetAttributes

	// SetTab [set_tab, hts] is the set a tab in every row, current columns.
	SetTab

	// SetWindow [set_window, wind] is the current window is lines #1-#2 cols #3-#4.
	SetWindow

	// Tab [tab, ht] is the tab to next 8-space hardware tab stop.
	Tab

	// ToStatusLine [to_status_line, tsl] is the move to status line, column #1.
	ToStatusLine

	// UnderlineChar [underline_char, uc] is the underline char and move past it.
	UnderlineChar

	// UpHalfLine [up_half_line, hu] is the half a line up.
	UpHalfLine

	// InitProg [init_prog, iprog] is the path name of program for initialization.
	InitProg

	// KeyA1 [key_a1, ka1] is the upper left of keypad.
	KeyA1

	// KeyA3 [key_a3, ka3] is the upper right of keypad.
	KeyA3

	// KeyB2 [key_b2, kb2] is the center of keypad.
	KeyB2

	// KeyC1 [key_c1, kc1] is the lower left of keypad.
	KeyC1

	// KeyC3 [key_c3, kc3] is the lower right of keypad.
	KeyC3

	// PrtrNon [prtr_non, mc5p] is the turn on printer for #1 bytes.
	PrtrNon

	// CharPadding [char_padding, rmp] is the like ip but when in insert mode.
	CharPadding

	// AcsChars [acs_chars, acsc] is the graphics charset pairs, based on vt100.
	AcsChars

	// PlabNorm [plab_norm, pln] is the program label #1 to show string #2.
	PlabNorm

	// KeyBtab [key_btab, kcbt] is the back-tab key.
	KeyBtab

	// EnterXonMode [enter_xon_mode, smxon] is the turn on xon/xoff handshaking.
	EnterXonMode

	// ExitXonMode [exit_xon_mode, rmxon] is the turn off xon/xoff handshaking.
	ExitXonMode

	// EnterAmMode [enter_am_mode, smam] is the turn on automatic margins.
	EnterAmMode

	// ExitAmMode [exit_am_mode, rmam] is the turn off automatic margins.
	ExitAmMode

	// XonCharacter [xon_character, xonc] is the XON character.
	XonCharacter

	// XoffCharacter [xoff_character, xoffc] is the XOFF character.
	XoffCharacter

	// EnaAcs [ena_acs, enacs] is the enable alternate char set.
	EnaAcs

	// LabelOn [label_on, smln] is the turn on soft labels.
	LabelOn

	// LabelOff [label_off, rmln] is the turn off soft labels.
	LabelOff

	// KeyBeg [key_beg, kbeg] is the begin key.
	KeyBeg

	// KeyCancel [key_cancel, kcan] is the cancel key.
	KeyCancel

	// KeyClose [key_close, kclo] is the close key.
	KeyClose

	// KeyCommand [key_command, kcmd] is the command key.
	KeyCommand

	// KeyCopy [key_copy, kcpy] is the copy key.
	KeyCopy

	// KeyCreate [key_create, kcrt] is the create key.
	KeyCreate

	// KeyEnd [key_end, kend] is the end key.
	KeyEnd

	// KeyEnter [key_enter, kent] is the enter/send key.
	KeyEnter

	// KeyExit [key_exit, kext] is the exit key.
	KeyExit

	// KeyFind [key_find, kfnd] is the find key.
	KeyFind

	// KeyHelp [key_help, khlp] is the help key.
	KeyHelp

	// KeyMark [key_mark, kmrk] is the mark key.
	KeyMark

	// KeyMessage [key_message, kmsg] is the message key.
	KeyMessage

	// KeyMove [key_move, kmov] is the move key.
	KeyMove

	// KeyNext [key_next, knxt] is the next key.
	KeyNext

	// KeyOpen [key_open, kopn] is the open key.
	KeyOpen

	// KeyOptions [key_options, kopt] is the options key.
	KeyOptions

	// KeyPrevious [key_previous, kprv] is the previous key.
	KeyPrevious

	// KeyPrint [key_print, kprt] is the print key.
	KeyPrint

	// KeyRedo [key_redo, krdo] is the redo key.
	KeyRedo

	// KeyReference [key_reference, kref] is the reference key.
	KeyReference

	// KeyRefresh [key_refresh, krfr] is the refresh key.
	KeyRefresh

	// KeyReplace [key_replace, krpl] is the replace key.
	KeyReplace

	// KeyRestart [key_restart, krst] is the restart key.
	KeyRestart

	// KeyResume [key_resume, kres] is the resume key.
	KeyResume

	// KeySave [key_save, ksav] is the save key.
	KeySave

	// KeySuspend [key_suspend, kspd] is the suspend key.
	KeySuspend

	// KeyUndo [key_undo, kund] is the undo key.
	KeyUndo

	// KeySbeg [key_sbeg, kBEG] is the shifted begin key.
	KeySbeg

	// KeyScancel [key_scancel, kCAN] is the shifted cancel key.
	KeyScancel

	// KeyScommand [key_scommand, kCMD] is the shifted command key.
	KeyScommand

	// KeyScopy [key_scopy, kCPY] is the shifted copy key.
	KeyScopy

	// KeyScreate [key_screate, kCRT] is the shifted create key.
	KeyScreate

	// KeySdc [key_sdc, kDC] is the shifted delete-character key.
	KeySdc

	// KeySdl [key_sdl, kDL] is the shifted delete-line key.
	KeySdl

	// KeySelect [key_select, kslt] is the select key.
	KeySelect

	// KeySend [key_send, kEND] is the shifted end key.
	KeySend

	// KeySeol [key_seol, kEOL] is the shifted clear-to-end-of-line key.
	KeySeol

	// KeySexit [key_sexit, kEXT] is the shifted exit key.
	KeySexit

	// KeySfind [key_sfind, kFND] is the shifted find key.
	KeySfind

	// KeyShelp [key_shelp, kHLP] is the shifted help key.
	KeyShelp

	// KeyShome [key_shome, kHOM] is the shifted home key.
	KeyShome

	// KeySic [key_sic, kIC] is the shifted insert-character key.
	KeySic

	// KeySleft [key_sleft, kLFT] is the shifted left-arrow key.
	KeySleft

	// KeySmessage [key_smessage, kMSG] is the shifted message key.
	KeySmessage

	// KeySmove [key_smove, kMOV] is the shifted move key.
	KeySmove

	// KeySnext [key_snext, kNXT] is the shifted next key.
	KeySnext

	// KeySoptions [key_soptions, kOPT] is the shifted options key.
	KeySoptions

	// KeySprevious [key_sprevious, kPRV] is the shifted previous key.
	KeySprevious

	// KeySprint [key_sprint, kPRT] is the shifted print key.
	KeySprint

	// KeySredo [key_sredo, kRDO] is the shifted redo key.
	KeySredo

	// KeySreplace [key_sreplace, kRPL] is the shifted replace key.
	KeySreplace

	// KeySright [key_sright, kRIT] is the shifted right-arrow key.
	KeySright

	// KeySrsume [key_srsume, kRES] is the shifted resume key.
	KeySrsume

	// KeySsave [key_ssave, kSAV] is the shifted save key.
	KeySsave

	// KeySsuspend [key_ssuspend, kSPD] is the shifted suspend key.
	KeySsuspend

	// KeySundo [key_sundo, kUND] is the shifted undo key.
	KeySundo

	// ReqForInput [req_for_input, rfi] is the send next input char (for ptys).
	ReqForInput

	// KeyF11 [key_f11, kf11] is the F11 function key.
	KeyF11

	// KeyF12 [key_f12, kf12] is the F12 function key.
	KeyF12

	// KeyF13 [key_f13, kf13] is the F13 function key.
	KeyF13

	// KeyF14 [key_f14, kf14] is the F14 function key.
	KeyF14

	// KeyF15 [key_f15, kf15] is the F15 function key.
	KeyF15

	// KeyF16 [key_f16, kf16] is the F16 function key.
	KeyF16

	// KeyF17 [key_f17, kf17] is the F17 function key.
	KeyF17

	// KeyF18 [key_f18, kf18] is the F18 function key.
	KeyF18

	// KeyF19 [key_f19, kf19] is the F19 function key.
	KeyF19

	// KeyF20 [key_f20, kf20] is the F20 function key.
	KeyF20

	// KeyF21 [key_f21, kf21] is the F21 function key.
	KeyF21

	// KeyF22 [key_f22, kf22] is the F22 function key.
	KeyF22

	// KeyF23 [key_f23, kf23] is the F23 function key.
	KeyF23

	// KeyF24 [key_f24, kf24] is the F24 function key.
	KeyF24

	// KeyF25 [key_f25, kf25] is the F25 function key.
	KeyF25

	// KeyF26 [key_f26, kf26] is the F26 function key.
	KeyF26

	// KeyF27 [key_f27, kf27] is the F27 function key.
	KeyF27

	// KeyF28 [key_f28, kf28] is the F28 function key.
	KeyF28

	// KeyF29 [key_f29, kf29] is the F29 function key.
	KeyF29

	// KeyF30 [key_f30, kf30] is the F30 function key.
	KeyF30

	// KeyF31 [key_f31, kf31] is the F31 function key.
	KeyF31

	// KeyF32 [key_f32, kf32] is the F32 function key.
	KeyF32

	// KeyF33 [key_f33, kf33] is the F33 function key.
	KeyF33

	// KeyF34 [key_f34, kf34] is the F34 function key.
	KeyF34

	// KeyF35 [key_f35, kf35] is the F35 function key.
	KeyF35

	// KeyF36 [key_f36, kf36] is the F36 function key.
	KeyF36

	// KeyF37 [key_f37, kf37] is the F37 function key.
	KeyF37

	// KeyF38 [key_f38, kf38] is the F38 function key.
	KeyF38

	// KeyF39 [key_f39, kf39] is the F39 function key.
	KeyF39

	// KeyF40 [key_f40, kf40] is the F40 function key.
	KeyF40

	// KeyF41 [key_f41, kf41] is the F41 function key.
	KeyF41

	// KeyF42 [key_f42, kf42] is the F42 function key.
	KeyF42

	// KeyF43 [key_f43, kf43] is the F43 function key.
	KeyF43

	// KeyF44 [key_f44, kf44] is the F44 function key.
	KeyF44

	// KeyF45 [key_f45, kf45] is the F45 function key.
	KeyF45

	// KeyF46 [key_f46, kf46] is the F46 function key.
	KeyF46

	// KeyF47 [key_f47, kf47] is the F47 function key.
	KeyF47

	// KeyF48 [key_f48, kf48] is the F48 function key.
	KeyF48

	// KeyF49 [key_f49, kf49] is the F49 function key.
	KeyF49

	// KeyF50 [key_f50, kf50] is the F50 function key.
	KeyF50

	// KeyF51 [key_f51, kf51] is the F51 function key.
	KeyF51

	// KeyF52 [key_f52, kf52] is the F52 function key.
	KeyF52

	// KeyF53 [key_f53, kf53] is the F53 function key.
	KeyF53

	// KeyF54 [key_f54, kf54] is the F54 function key.
	KeyF54

	// KeyF55 [key_f55, kf55] is the F55 function key.
	KeyF55

	// KeyF56 [key_f56, kf56] is the F56 function key.
	KeyF56

	// KeyF57 [key_f57, kf57] is the F57 function key.
	KeyF57

	// KeyF58 [key_f58, kf58] is the F58 function key.
	KeyF58

	// KeyF59 [key_f59, kf59] is the F59 function key.
	KeyF59

	// KeyF60 [key_f60, kf60] is the F60 function key.
	KeyF60

	// KeyF61 [key_f61, kf61] is the F61 function key.
	KeyF61

	// KeyF62 [key_f62, kf62] is the F62 function key.
	KeyF62

	// KeyF63 [key_f63, kf63] is the F63 function key.
	KeyF63

	// ClrBol [clr_bol, el1] is the Clear to beginning of line.
	ClrBol

	// ClearMargins [clear_margins, mgc] is the clear right and left soft margins.
	ClearMargins

	// SetLeftMargin [set_left_margin, smgl] is the set left soft margin at current column.	 See smgl. (ML is not in BSD termcap).
	SetLeftMargin

	// SetRightMargin [set_right_margin, smgr] is the set right soft margin at current column.
	SetRightMargin

	// LabelFormat [label_format, fln] is the label format.
	LabelFormat

	// SetClock [set_clock, sclk] is the set clock, #1 hrs #2 mins #3 secs.
	SetClock

	// DisplayClock [display_clock, dclk] is the display clock.
	DisplayClock

	// RemoveClock [remove_clock, rmclk] is the remove clock.
	RemoveClock

	// CreateWindow [create_window, cwin] is the define a window #1 from #2,#3 to #4,#5.
	CreateWindow

	// GotoWindow [goto_window, wingo] is the go to window #1.
	GotoWindow

	// Hangup [hangup, hup] is the hang-up phone.
	Hangup

	// DialPhone [dial_phone, dial] is the dial number #1.
	DialPhone

	// QuickDial [quick_dial, qdial] is the dial number #1 without checking.
	QuickDial

	// Tone [tone, tone] is the select touch tone dialing.
	Tone

	// Pulse [pulse, pulse] is the select pulse dialing.
	Pulse

	// FlashHook [flash_hook, hook] is the flash switch hook.
	FlashHook

	// FixedPause [fixed_pause, pause] is the pause for 2-3 seconds.
	FixedPause

	// WaitTone [wait_tone, wait] is the wait for dial-tone.
	WaitTone

	// User0 [user0, u0] is the User string #0.
	User0

	// User1 [user1, u1] is the User string #1.
	User1

	// User2 [user2, u2] is the User string #2.
	User2

	// User3 [user3, u3] is the User string #3.
	User3

	// User4 [user4, u4] is the User string #4.
	User4

	// User5 [user5, u5] is the User string #5.
	User5

	// User6 [user6, u6] is the User string #6.
	User6

	// User7 [user7, u7] is the User string #7.
	User7

	// User8 [user8, u8] is the User string #8.
	User8

	// User9 [user9, u9] is the User string #9.
	User9

	// OrigPair [orig_pair, op] is the Set default pair to its original value.
	OrigPair

	// OrigColors [orig_colors, oc] is the Set all color pairs to the original ones.
	OrigColors

	// InitializeColor [initialize_color, initc] is the initialize color #1 to (#2,#3,#4).
	InitializeColor

	// InitializePair [initialize_pair, initp] is the Initialize color pair #1 to fg=(#2,#3,#4), bg=(#5,#6,#7).
	InitializePair

	// SetColorPair [set_color_pair, scp] is the Set current color pair to #1.
	SetColorPair

	// SetForeground [set_foreground, setf] is the Set foreground color #1.
	SetForeground

	// SetBackground [set_background, setb] is the Set background color #1.
	SetBackground

	// ChangeCharPitch [change_char_pitch, cpi] is the Change number of characters per inch to #1.
	ChangeCharPitch

	// ChangeLinePitch [change_line_pitch, lpi] is the Change number of lines per inch to #1.
	ChangeLinePitch

	// ChangeResHorz [change_res_horz, chr] is the Change horizontal resolution to #1.
	ChangeResHorz

	// ChangeResVert [change_res_vert, cvr] is the Change vertical resolution to #1.
	ChangeResVert

	// DefineChar [define_char, defc] is the Define a character #1, #2 dots wide, descender #3.
	DefineChar

	// EnterDoublewideMode [enter_doublewide_mode, swidm] is the Enter double-wide mode.
	EnterDoublewideMode

	// EnterDraftQuality [enter_draft_quality, sdrfq] is the Enter draft-quality mode.
	EnterDraftQuality

	// EnterItalicsMode [enter_italics_mode, sitm] is the Enter italic mode.
	EnterItalicsMode

	// EnterLeftwardMode [enter_leftward_mode, slm] is the Start leftward carriage motion.
	EnterLeftwardMode

	// EnterMicroMode [enter_micro_mode, smicm] is the Start micro-motion mode.
	EnterMicroMode

	// EnterNearLetterQuality [enter_near_letter_quality, snlq] is the Enter NLQ mode.
	EnterNearLetterQuality

	// EnterNormalQuality [enter_normal_quality, snrmq] is the Enter normal-quality mode.
	EnterNormalQuality

	// EnterShadowMode [enter_shadow_mode, sshm] is the Enter shadow-print mode.
	EnterShadowMode

	// EnterSubscriptMode [enter_subscript_mode, ssubm] is the Enter subscript mode.
	EnterSubscriptMode

	// EnterSuperscriptMode [enter_superscript_mode, ssupm] is the Enter superscript mode.
	EnterSuperscriptMode

	// EnterUpwardMode [enter_upward_mode, sum] is the Start upward carriage motion.
	EnterUpwardMode

	// ExitDoublewideMode [exit_doublewide_mode, rwidm] is the End double-wide mode.
	ExitDoublewideMode

	// ExitItalicsMode [exit_italics_mode, ritm] is the End italic mode.
	ExitItalicsMode

	// ExitLeftwardMode [exit_leftward_mode, rlm] is the End left-motion mode.
	ExitLeftwardMode

	// ExitMicroMode [exit_micro_mode, rmicm] is the End micro-motion mode.
	ExitMicroMode

	// ExitShadowMode [exit_shadow_mode, rshm] is the End shadow-print mode.
	ExitShadowMode

	// ExitSubscriptMode [exit_subscript_mode, rsubm] is the End subscript mode.
	ExitSubscriptMode

	// ExitSuperscriptMode [exit_superscript_mode, rsupm] is the End superscript mode.
	ExitSuperscriptMode

	// ExitUpwardMode [exit_upward_mode, rum] is the End reverse character motion.
	ExitUpwardMode

	// MicroColumnAddress [micro_column_address, mhpa] is the Like column_address in micro mode.
	MicroColumnAddress

	// MicroDown [micro_down, mcud1] is the Like cursor_down in micro mode.
	MicroDown

	// MicroLeft [micro_left, mcub1] is the Like cursor_left in micro mode.
	MicroLeft

	// MicroRight [micro_right, mcuf1] is the Like cursor_right in micro mode.
	MicroRight

	// MicroRowAddress [micro_row_address, mvpa] is the Like row_address #1 in micro mode.
	MicroRowAddress

	// MicroUp [micro_up, mcuu1] is the Like cursor_up in micro mode.
	MicroUp

	// OrderOfPins [order_of_pins, porder] is the Match software bits to print-head pins.
	OrderOfPins

	// ParmDownMicro [parm_down_micro, mcud] is the Like parm_down_cursor in micro mode.
	ParmDownMicro

	// ParmLeftMicro [parm_left_micro, mcub] is the Like parm_left_cursor in micro mode.
	ParmLeftMicro

	// ParmRightMicro [parm_right_micro, mcuf] is the Like parm_right_cursor in micro mode.
	ParmRightMicro

	// ParmUpMicro [parm_up_micro, mcuu] is the Like parm_up_cursor in micro mode.
	ParmUpMicro

	// SelectCharSet [select_char_set, scs] is the Select character set, #1.
	SelectCharSet

	// SetBottomMargin [set_bottom_margin, smgb] is the Set bottom margin at current line.
	SetBottomMargin

	// SetBottomMarginParm [set_bottom_margin_parm, smgbp] is the Set bottom margin at line #1 or (if smgtp is not given) #2 lines from bottom.
	SetBottomMarginParm

	// SetLeftMarginParm [set_left_margin_parm, smglp] is the Set left (right) margin at column #1.
	SetLeftMarginParm

	// SetRightMarginParm [set_right_margin_parm, smgrp] is the Set right margin at column #1.
	SetRightMarginParm

	// SetTopMargin [set_top_margin, smgt] is the Set top margin at current line.
	SetTopMargin

	// SetTopMarginParm [set_top_margin_parm, smgtp] is the Set top (bottom) margin at row #1.
	SetTopMarginParm

	// StartBitImage [start_bit_image, sbim] is the Start printing bit image graphics.
	StartBitImage

	// StartCharSetDef [start_char_set_def, scsd] is the Start character set definition #1, with #2 characters in the set.
	StartCharSetDef

	// StopBitImage [stop_bit_image, rbim] is the Stop printing bit image graphics.
	StopBitImage

	// StopCharSetDef [stop_char_set_def, rcsd] is the End definition of character set #1.
	StopCharSetDef

	// SubscriptCharacters [subscript_characters, subcs] is the List of subscriptable characters.
	SubscriptCharacters

	// SuperscriptCharacters [superscript_characters, supcs] is the List of superscriptable characters.
	SuperscriptCharacters

	// TheseCauseCr [these_cause_cr, docr] is the Printing any of these characters causes CR.
	TheseCauseCr

	// ZeroMotion [zero_motion, zerom] is the No motion for subsequent character.
	ZeroMotion

	// CharSetNames [char_set_names, csnm] is the Produce #1'th item from list of character set names.
	CharSetNames

	// KeyMouse [key_mouse, kmous] is the Mouse event has occurred.
	KeyMouse

	// MouseInfo [mouse_info, minfo] is the Mouse status information.
	MouseInfo

	// ReqMousePos [req_mouse_pos, reqmp] is the Request mouse position.
	ReqMousePos

	// GetMouse [get_mouse, getm] is the Curses should get button events, parameter #1 not documented.
	GetMouse

	// SetAForeground [set_a_foreground, setaf] is the Set foreground color to #1, using ANSI escape.
	SetAForeground

	// SetABackground [set_a_background, setab] is the Set background color to #1, using ANSI escape.
	SetABackground

	// PkeyPlab [pkey_plab, pfxl] is the Program function key #1 to type string #2 and show string #3.
	PkeyPlab

	// DeviceType [device_type, devt] is the Indicate language/codeset support.
	DeviceType

	// CodeSetInit [code_set_init, csin] is the Init sequence for multiple codesets.
	CodeSetInit

	// Set0DesSeq [set0_des_seq, s0ds] is the Shift to codeset 0 (EUC set 0, ASCII).
	Set0DesSeq

	// Set1DesSeq [set1_des_seq, s1ds] is the Shift to codeset 1.
	Set1DesSeq

	// Set2DesSeq [set2_des_seq, s2ds] is the Shift to codeset 2.
	Set2DesSeq

	// Set3DesSeq [set3_des_seq, s3ds] is the Shift to codeset 3.
	Set3DesSeq

	// SetLrMargin [set_lr_margin, smglr] is the Set both left and right margins to #1, #2.  (ML is not in BSD termcap).
	SetLrMargin

	// SetTbMargin [set_tb_margin, smgtb] is the Sets both top and bottom margins to #1, #2.
	SetTbMargin

	// BitImageRepeat [bit_image_repeat, birep] is the Repeat bit image cell #1 #2 times.
	BitImageRepeat

	// BitImageNewline [bit_image_newline, binel] is the Move to next row of the bit image.
	BitImageNewline

	// BitImageCarriageReturn [bit_image_carriage_return, bicr] is the Move to beginning of same row.
	BitImageCarriageReturn

	// ColorNames [color_names, colornm] is the Give name for color #1.
	ColorNames

	// DefineBitImageRegion [define_bit_image_region, defbi] is the Define rectangular bit image region.
	DefineBitImageRegion

	// EndBitImageRegion [end_bit_image_region, endbi] is the End a bit-image region.
	EndBitImageRegion

	// SetColorBand [set_color_band, setcolor] is the Change to ribbon color #1.
	SetColorBand

	// SetPageLength [set_page_length, slines] is the Set page length to #1 lines.
	SetPageLength

	// DisplayPcChar [display_pc_char, dispc] is the Display PC character #1.
	DisplayPcChar

	// EnterPcCharsetMode [enter_pc_charset_mode, smpch] is the Enter PC character display mode.
	EnterPcCharsetMode

	// ExitPcCharsetMode [exit_pc_charset_mode, rmpch] is the Exit PC character display mode.
	ExitPcCharsetMode

	// EnterScancodeMode [enter_scancode_mode, smsc] is the Enter PC scancode mode.
	EnterScancodeMode

	// ExitScancodeMode [exit_scancode_mode, rmsc] is the Exit PC scancode mode.
	ExitScancodeMode

	// PcTermOptions [pc_term_options, pctrm] is the PC terminal options.
	PcTermOptions

	// ScancodeEscape [scancode_escape, scesc] is the Escape for scancode emulation.
	ScancodeEscape

	// AltScancodeEsc [alt_scancode_esc, scesa] is the Alternate escape for scancode emulation.
	AltScancodeEsc

	// EnterHorizontalHlMode [enter_horizontal_hl_mode, ehhlm] is the Enter horizontal highlight mode.
	EnterHorizontalHlMode

	// EnterLeftHlMode [enter_left_hl_mode, elhlm] is the Enter left highlight mode.
	EnterLeftHlMode

	// EnterLowHlMode [enter_low_hl_mode, elohlm] is the Enter low highlight mode.
	EnterLowHlMode

	// EnterRightHlMode [enter_right_hl_mode, erhlm] is the Enter right highlight mode.
	EnterRightHlMode

	// EnterTopHlMode [enter_top_hl_mode, ethlm] is the Enter top highlight mode.
	EnterTopHlMode

	// EnterVerticalHlMode [enter_vertical_hl_mode, evhlm] is the Enter vertical highlight mode.
	EnterVerticalHlMode

	// SetAAttributes [set_a_attributes, sgr1] is the Define second set of video attributes #1-#6.
	SetAAttributes

	// SetPglenInch [set_pglen_inch, slength] is the Set page length to #1 hundredth of an inch (some implementations use sL for termcap).
	SetPglenInch

	// TermcapInit2 [termcap_init2, OTi2] is the secondary initialization string.
	TermcapInit2

	// TermcapReset [termcap_reset, OTrs] is the terminal reset string.
	TermcapReset

	// LinefeedIfNotLf [linefeed_if_not_lf, OTnl] is the use to move down.
	LinefeedIfNotLf

	// BackspaceIfNotBs [backspace_if_not_bs, OTbc] is the move left, if not ^H.
	BackspaceIfNotBs

	// OtherNonFunctionKeys [other_non_function_keys, OTko] is the list of self-mapped keycaps.
	OtherNonFunctionKeys

	// ArrowKeyMap [arrow_key_map, OTma] is the map arrow keys rogue(1) motion keys.
	ArrowKeyMap

	// AcsUlcorner [acs_ulcorner, OTG2] is the single upper left.
	AcsUlcorner

	// AcsLlcorner [acs_llcorner, OTG3] is the single lower left.
	AcsLlcorner

	// AcsUrcorner [acs_urcorner, OTG1] is the single upper right.
	AcsUrcorner

	// AcsLrcorner [acs_lrcorner, OTG4] is the single lower right.
	AcsLrcorner

	// AcsLtee [acs_ltee, OTGR] is the tee pointing right.
	AcsLtee

	// AcsRtee [acs_rtee, OTGL] is the tee pointing left.
	AcsRtee

	// AcsBtee [acs_btee, OTGU] is the tee pointing up.
	AcsBtee

	// AcsTtee [acs_ttee, OTGD] is the tee pointing down.
	AcsTtee

	// AcsHline [acs_hline, OTGH] is the single horizontal line.
	AcsHline

	// AcsVline [acs_vline, OTGV] is the single vertical line.
	AcsVline

	// AcsPlus [acs_plus, OTGC] is the single intersection.
	AcsPlus

	// MemoryLock [memory_lock, meml] is the lock memory above cursor.
	MemoryLock

	// MemoryUnlock [memory_unlock, memu] is the unlock memory.
	MemoryUnlock

	// BoxChars1 [box_chars_1, box1] is the box characters primary set.
	BoxChars1
)

const (
	CapCountBool   = ReturnDoesClrEol + 1
	CapCountNum    = NumberOfFunctionKeys + 1
	CapCountString = BoxChars1 + 1
)

// boolCapNames are the bool term cap names.
var boolCapNames = [...]string{
	"auto_left_margin", "bw",
	"auto_right_margin", "am",
	"no_esc_ctlc", "xsb",
	"ceol_standout_glitch", "xhp",
	"eat_newline_glitch", "xenl",
	"erase_overstrike", "eo",
	"generic_type", "gn",
	"hard_copy", "hc",
	"has_meta_key", "km",
	"has_status_line", "hs",
	"insert_null_glitch", "in",
	"memory_above", "da",
	"memory_below", "db",
	"move_insert_mode", "mir",
	"move_standout_mode", "msgr",
	"over_strike", "os",
	"status_line_esc_ok", "eslok",
	"dest_tabs_magic_smso", "xt",
	"tilde_glitch", "hz",
	"transparent_underline", "ul",
	"xon_xoff", "xon",
	"needs_xon_xoff", "nxon",
	"prtr_silent", "mc5i",
	"hard_cursor", "chts",
	"non_rev_rmcup", "nrrmc",
	"no_pad_char", "npc",
	"non_dest_scroll_region", "ndscr",
	"can_change", "ccc",
	"back_color_erase", "bce",
	"hue_lightness_saturation", "hls",
	"col_addr_glitch", "xhpa",
	"cr_cancels_micro_mode", "crxm",
	"has_print_wheel", "daisy",
	"row_addr_glitch", "xvpa",
	"semi_auto_right_margin", "sam",
	"cpi_changes_res", "cpix",
	"lpi_changes_res", "lpix",
	"backspaces_with_bs", "OTbs",
	"crt_no_scrolling", "OTns",
	"no_correctly_working_cr", "OTnc",
	"gnu_has_meta_key", "OTMT",
	"linefeed_is_newline", "OTNL",
	"has_hardware_tabs", "OTpt",
	"return_does_clr_eol", "OTxr",
}

// numCapNames are the num term cap names.
var numCapNames = [...]string{
	"columns", "cols",
	"init_tabs", "it",
	"lines", "lines",
	"lines_of_memory", "lm",
	"magic_cookie_glitch", "xmc",
	"padding_baud_rate", "pb",
	"virtual_terminal", "vt",
	"width_status_line", "wsl",
	"num_labels", "nlab",
	"label_height", "lh",
	"label_width", "lw",
	"max_attributes", "ma",
	"maximum_windows", "wnum",
	"max_colors", "colors",
	"max_pairs", "pairs",
	"no_color_video", "ncv",
	"buffer_capacity", "bufsz",
	"dot_vert_spacing", "spinv",
	"dot_horz_spacing", "spinh",
	"max_micro_address", "maddr",
	"max_micro_jump", "mjump",
	"micro_col_size", "mcs",
	"micro_line_size", "mls",
	"number_of_pins", "npins",
	"output_res_char", "orc",
	"output_res_line", "orl",
	"output_res_horz_inch", "orhi",
	"output_res_vert_inch", "orvi",
	"print_rate", "cps",
	"wide_char_size", "widcs",
	"buttons", "btns",
	"bit_image_entwining", "bitwin",
	"bit_image_type", "bitype",
	"magic_cookie_glitch_ul", "OTug",
	"carriage_return_delay", "OTdC",
	"new_line_delay", "OTdN",
	"backspace_delay", "OTdB",
	"horizontal_tab_delay", "OTdT",
	"number_of_function_keys", "OTkn",
}

// stringCapNames are the string term cap names.
var stringCapNames = [...]string{
	"back_tab", "cbt",
	"bell", "bel",
	"carriage_return", "cr",
	"change_scroll_region", "csr",
	"clear_all_tabs", "tbc",
	"clear_screen", "clear",
	"clr_eol", "el",
	"clr_eos", "ed",
	"column_address", "hpa",
	"command_character", "cmdch",
	"cursor_address", "cup",
	"cursor_down", "cud1",
	"cursor_home", "home",
	"cursor_invisible", "civis",
	"cursor_left", "cub1",
	"cursor_mem_address", "mrcup",
	"cursor_normal", "cnorm",
	"cursor_right", "cuf1",
	"cursor_to_ll", "ll",
	"cursor_up", "cuu1",
	"cursor_visible", "cvvis",
	"delete_character", "dch1",
	"delete_line", "dl1",
	"dis_status_line", "dsl",
	"down_half_line", "hd",
	"enter_alt_charset_mode", "smacs",
	"enter_blink_mode", "blink",
	"enter_bold_mode", "bold",
	"enter_ca_mode", "smcup",
	"enter_delete_mode", "smdc",
	"enter_dim_mode", "dim",
	"enter_insert_mode", "smir",
	"enter_secure_mode", "invis",
	"enter_protected_mode", "prot",
	"enter_reverse_mode", "rev",
	"enter_standout_mode", "smso",
	"enter_underline_mode", "smul",
	"erase_chars", "ech",
	"exit_alt_charset_mode", "rmacs",
	"exit_attribute_mode", "sgr0",
	"exit_ca_mode", "rmcup",
	"exit_delete_mode", "rmdc",
	"exit_insert_mode", "rmir",
	"exit_standout_mode", "rmso",
	"exit_underline_mode", "rmul",
	"flash_screen", "flash",
	"form_feed", "ff",
	"from_status_line", "fsl",
	"init_1string", "is1",
	"init_2string", "is2",
	"init_3string", "is3",
	"init_file", "if",
	"insert_character", "ich1",
	"insert_line", "il1",
	"insert_padding", "ip",
	"key_backspace", "kbs",
	"key_catab", "ktbc",
	"key_clear", "kclr",
	"key_ctab", "kctab",
	"key_dc", "kdch1",
	"key_dl", "kdl1",
	"key_down", "kcud1",
	"key_eic", "krmir",
	"key_eol", "kel",
	"key_eos", "ked",
	"key_f0", "kf0",
	"key_f1", "kf1",
	"key_f10", "kf10",
	"key_f2", "kf2",
	"key_f3", "kf3",
	"key_f4", "kf4",
	"key_f5", "kf5",
	"key_f6", "kf6",
	"key_f7", "kf7",
	"key_f8", "kf8",
	"key_f9", "kf9",
	"key_home", "khome",
	"key_ic", "kich1",
	"key_il", "kil1",
	"key_left", "kcub1",
	"key_ll", "kll",
	"key_npage", "knp",
	"key_ppage", "kpp",
	"key_right", "kcuf1",
	"key_sf", "kind",
	"key_sr", "kri",
	"key_stab", "khts",
	"key_up", "kcuu1",
	"keypad_local", "rmkx",
	"keypad_xmit", "smkx",
	"lab_f0", "lf0",
	"lab_f1", "lf1",
	"lab_f10", "lf10",
	"lab_f2", "lf2",
	"lab_f3", "lf3",
	"lab_f4", "lf4",
	"lab_f5", "lf5",
	"lab_f6", "lf6",
	"lab_f7", "lf7",
	"lab_f8", "lf8",
	"lab_f9", "lf9",
	"meta_off", "rmm",
	"meta_on", "smm",
	"newline", "nel",
	"pad_char", "pad",
	"parm_dch", "dch",
	"parm_delete_line", "dl",
	"parm_down_cursor", "cud",
	"parm_ich", "ich",
	"parm_index", "indn",
	"parm_insert_line", "il",
	"parm_left_cursor", "cub",
	"parm_right_cursor", "cuf",
	"parm_rindex", "rin",
	"parm_up_cursor", "cuu",
	"pkey_key", "pfkey",
	"pkey_local", "pfloc",
	"pkey_xmit", "pfx",
	"print_screen", "mc0",
	"prtr_off", "mc4",
	"prtr_on", "mc5",
	"repeat_char", "rep",
	"reset_1string", "rs1",
	"reset_2string", "rs2",
	"reset_3string", "rs3",
	"reset_file", "rf",
	"restore_cursor", "rc",
	"row_address", "vpa",
	"save_cursor", "sc",
	"scroll_forward", "ind",
	"scroll_reverse", "ri",
	"set_attributes", "sgr",
	"set_tab", "hts",
	"set_window", "wind",
	"tab", "ht",
	"to_status_line", "tsl",
	"underline_char", "uc",
	"up_half_line", "hu",
	"init_prog", "iprog",
	"key_a1", "ka1",
	"key_a3", "ka3",
	"key_b2", "kb2",
	"key_c1", "kc1",
	"key_c3", "kc3",
	"prtr_non", "mc5p",
	"char_padding", "rmp",
	"acs_chars", "acsc",
	"plab_norm", "pln",
	"key_btab", "kcbt",
	"enter_xon_mode", "smxon",
	"exit_xon_mode", "rmxon",
	"enter_am_mode", "smam",
	"exit_am_mode", "rmam",
	"xon_character", "xonc",
	"xoff_character", "xoffc",
	"ena_acs", "enacs",
	"label_on", "smln",
	"label_off", "rmln",
	"key_beg", "kbeg",
	"key_cancel", "kcan",
	"key_close", "kclo",
	"key_command", "kcmd",
	"key_copy", "kcpy",
	"key_create", "kcrt",
	"key_end", "kend",
	"key_enter", "kent",
	"key_exit", "kext",
	"key_find", "kfnd",
	"key_help", "khlp",
	"key_mark", "kmrk",
	"key_message", "kmsg",
	"key_move", "kmov",
	"key_next", "knxt",
	"key_open", "kopn",
	"key_options", "kopt",
	"key_previous", "kprv",
	"key_print", "kprt",
	"key_redo", "krdo",
	"key_reference", "kref",
	"key_refresh", "krfr",
	"key_replace", "krpl",
	"key_restart", "krst",
	"key_resume", "kres",
	"key_save", "ksav",
	"key_suspend", "kspd",
	"key_undo", "kund",
	"key_sbeg", "kBEG",
	"key_scancel", "kCAN",
	"key_scommand", "kCMD",
	"key_scopy", "kCPY",
	"key_screate", "kCRT",
	"key_sdc", "kDC",
	"key_sdl", "kDL",
	"key_select", "kslt",
	"key_send", "kEND",
	"key_seol", "kEOL",
	"key_sexit", "kEXT",
	"key_sfind", "kFND",
	"key_shelp", "kHLP",
	"key_shome", "kHOM",
	"key_sic", "kIC",
	"key_sleft", "kLFT",
	"key_smessage", "kMSG",
	"key_smove", "kMOV",
	"key_snext", "kNXT",
	"key_soptions", "kOPT",
	"key_sprevious", "kPRV",
	"key_sprint", "kPRT",
	"key_sredo", "kRDO",
	"key_sreplace", "kRPL",
	"key_sright", "kRIT",
	"key_srsume", "kRES",
	"key_ssave", "kSAV",
	"key_ssuspend", "kSPD",
	"key_sundo", "kUND",
	"req_for_input", "rfi",
	"key_f11", "kf11",
	"key_f12", "kf12",
	"key_f13", "kf13",
	"key_f14", "kf14",
	"key_f15", "kf15",
	"key_f16", "kf16",
	"key_f17", "kf17",
	"key_f18", "kf18",
	"key_f19", "kf19",
	"key_f20", "kf20",
	"key_f21", "kf21",
	"key_f22", "kf22",
	"key_f23", "kf23",
	"key_f24", "kf24",
	"key_f25", "kf25",
	"key_f26", "kf26",
	"key_f27", "kf27",
	"key_f28", "kf28",
	"key_f29", "kf29",
	"key_f30", "kf30",
	"key_f31", "kf31",
	"key_f32", "kf32",
	"key_f33", "kf33",
	"key_f34", "kf34",
	"key_f35", "kf35",
	"key_f36", "kf36",
	"key_f37", "kf37",
	"key_f38", "kf38",
	"key_f39", "kf39",
	"key_f40", "kf40",
	"key_f41", "kf41",
	"key_f42", "kf42",
	"key_f43", "kf43",
	"key_f44", "kf44",
	"key_f45", "kf45",
	"key_f46", "kf46",
	"key_f47", "kf47",
	"key_f48", "kf48",
	"key_f49", "kf49",
	"key_f50", "kf50",
	"key_f51", "kf51",
	"key_f52", "kf52",
	"key_f53", "kf53",
	"key_f54", "kf54",
	"key_f55", "kf55",
	"key_f56", "kf56",
	"key_f57", "kf57",
	"key_f58", "kf58",
	"key_f59", "kf59",
	"key_f60", "kf60",
	"key_f61", "kf61",
	"key_f62", "kf62",
	"key_f63", "kf63",
	"clr_bol", "el1",
	"clear_margins", "mgc",
	"set_left_margin", "smgl",
	"set_right_margin", "smgr",
	"label_format", "fln",
	"set_clock", "sclk",
	"display_clock", "dclk",
	"remove_clock", "rmclk",
	"create_window", "cwin",
	"goto_window", "wingo",
	"hangup", "hup",
	"dial_phone", "dial",
	"quick_dial", "qdial",
	"tone", "tone",
	"pulse", "pulse",
	"flash_hook", "hook",
	"fixed_pause", "pause",
	"wait_tone", "wait",
	"user0", "u0",
	"user1", "u1",
	"user2", "u2",
	"user3", "u3",
	"user4", "u4",
	"user5", "u5",
	"user6", "u6",
	"user7", "u7",
	"user8", "u8",
	"user9", "u9",
	"orig_pair", "op",
	"orig_colors", "oc",
	"initialize_color", "initc",
	"initialize_pair", "initp",
	"set_color_pair", "scp",
	"set_foreground", "setf",
	"set_background", "setb",
	"change_char_pitch", "cpi",
	"change_line_pitch", "lpi",
	"change_res_horz", "chr",
	"change_res_vert", "cvr",
	"define_char", "defc",
	"enter_doublewide_mode", "swidm",
	"enter_draft_quality", "sdrfq",
	"enter_italics_mode", "sitm",
	"enter_leftward_mode", "slm",
	"enter_micro_mode", "smicm",
	"enter_near_letter_quality", "snlq",
	"enter_normal_quality", "snrmq",
	"enter_shadow_mode", "sshm",
	"enter_subscript_mode", "ssubm",
	"enter_superscript_mode", "ssupm",
	"enter_upward_mode", "sum",
	"exit_doublewide_mode", "rwidm",
	"exit_italics_mode", "ritm",
	"exit_leftward_mode", "rlm",
	"exit_micro_mode", "rmicm",
	"exit_shadow_mode", "rshm",
	"exit_subscript_mode", "rsubm",
	"exit_superscript_mode", "rsupm",
	"exit_upward_mode", "rum",
	"micro_column_address", "mhpa",
	"micro_down", "mcud1",
	"micro_left", "mcub1",
	"micro_right", "mcuf1",
	"micro_row_address", "mvpa",
	"micro_up", "mcuu1",
	"order_of_pins", "porder",
	"parm_down_micro", "mcud",
	"parm_left_micro", "mcub",
	"parm_right_micro", "mcuf",
	"parm_up_micro", "mcuu",
	"select_char_set", "scs",
	"set_bottom_margin", "smgb",
	"set_bottom_margin_parm", "smgbp",
	"set_left_margin_parm", "smglp",
	"set_right_margin_parm", "smgrp",
	"set_top_margin", "smgt",
	"set_top_margin_parm", "smgtp",
	"start_bit_image", "sbim",
	"start_char_set_def", "scsd",
	"stop_bit_image", "rbim",
	"stop_char_set_def", "rcsd",
	"subscript_characters", "subcs",
	"superscript_characters", "supcs",
	"these_cause_cr", "docr",
	"zero_motion", "zerom",
	"char_set_names", "csnm",
	"key_mouse", "kmous",
	"mouse_info", "minfo",
	"req_mouse_pos", "reqmp",
	"get_mouse", "getm",
	"set_a_foreground", "setaf",
	"set_a_background", "setab",
	"pkey_plab", "pfxl",
	"device_type", "devt",
	"code_set_init", "csin",
	"set0_des_seq", "s0ds",
	"set1_des_seq", "s1ds",
	"set2_des_seq", "s2ds",
	"set3_des_seq", "s3ds",
	"set_lr_margin", "smglr",
	"set_tb_margin", "smgtb",
	"bit_image_repeat", "birep",
	"bit_image_newline", "binel",
	"bit_image_carriage_return", "bicr",
	"color_names", "colornm",
	"define_bit_image_region", "defbi",
	"end_bit_image_region", "endbi",
	"set_color_band", "setcolor",
	"set_page_length", "slines",
	"display_pc_char", "dispc",
	"enter_pc_charset_mode", "smpch",
	"exit_pc_charset_mode", "rmpch",
	"enter_scancode_mode", "smsc",
	"exit_scancode_mode", "rmsc",
	"pc_term_options", "pctrm",
	"scancode_escape", "scesc",
	"alt_scancode_esc", "scesa",
	"enter_horizontal_hl_mode", "ehhlm",
	"enter_left_hl_mode", "elhlm",
	"enter_low_hl_mode", "elohlm",
	"enter_right_hl_mode", "erhlm",
	"enter_top_hl_mode", "ethlm",
	"enter_vertical_hl_mode", "evhlm",
	"set_a_attributes", "sgr1",
	"set_pglen_inch", "slength",
	"termcap_init2", "OTi2",
	"termcap_reset", "OTrs",
	"linefeed_if_not_lf", "OTnl",
	"backspace_if_not_bs", "OTbc",
	"other_non_function_keys", "OTko",
	"arrow_key_map", "OTma",
	"acs_ulcorner", "OTG2",
	"acs_llcorner", "OTG3",
	"acs_urcorner", "OTG1",
	"acs_lrcorner", "OTG4",
	"acs_ltee", "OTGR",
	"acs_rtee", "OTGL",
	"acs_btee", "OTGU",
	"acs_ttee", "OTGD",
	"acs_hline", "OTGH",
	"acs_vline", "OTGV",
	"acs_plus", "OTGC",
	"memory_lock", "meml",
	"memory_unlock", "memu",
	"box_chars_1", "box1",
}
